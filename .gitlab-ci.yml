stages:
  - build
  - test
  - deploy

compile-gentoo:
  image:
    name: gitlab-registry.cern.ch/adaptyst/gentoo-fp:latest
  stage: build
  before_script:
    - emerge -g --quiet-build=y llvm-core/clang
  script:
    - ./build.sh -G Ninja
    - echo | PATH=$PATH:$(dirname /usr/lib/llvm/*/bin/clang) ./install.sh
    - mkdir -p install/etc install/opt install/usr/local/bin install/usr/local/lib
    - cp /etc/adaptyst.conf install/etc/
    - cp -r /opt/adaptyst install/opt/
    - cp /usr/local/bin/adaptyst* install/usr/local/bin/
    - cp /usr/local/lib/libadaptystserv.so install/usr/local/lib/
  artifacts:
    paths:
      - install
    expire_in: 6 h

compile-alma9:
  image:
    name: gitlab-registry.cern.ch/adaptyst/alma9-fp:latest
  stage: build
  before_script:
    - dnf install -y git cmake numactl-devel cli11-devel json-devel poco-devel boost-devel libarchive-devel clang libtraceevent-devel flex bison elfutils-libelf-devel ninja-build
  script:
    - ./build.sh -G Ninja
    - echo | ./install.sh /usr
    - mkdir -p install/etc install/opt install/usr/bin install/usr/lib
    - cp /etc/adaptyst.conf install/etc/
    - cp -r /opt/adaptyst install/opt/
    - cp /usr/bin/adaptyst* install/usr/bin/
    - cp /usr/lib/libadaptystserv.so install/usr/lib/
  artifacts:
    paths:
      - install
    expire_in: 6 h

doxygen-test:
  image:
    name: registry.cern.ch/docker.io/ubuntu:latest
  stage: test
  dependencies: []
  rules:
    - if: $CI_COMMIT_BRANCH != "main"
  before_script:
    - apt-get update
    - apt-get install -y doxygen
  script:
    - cd docs
    - doxygen Doxyfile
  artifacts:
    paths:
      - docs/html
    expire_in: 6 h

pages:
  stage: deploy
  dependencies: ["doxygen-test"]
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - mv docs/html public
  artifacts:
    paths:
      - public

# Based on https://gitlab.cern.ch/gitlabci-examples/build_docker_image/-/blob/master/.gitlab-ci.yml
make-gentoo-docker-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: deploy
  dependencies: []
  script:
    - |
      if [[ $CI_COMMIT_BRANCH == "main" ]]; then
        export IMAGE_DESTINATION_NAMED=$CI_REGISTRY/adaptyst/adaptyst:latest
      else
        export IMAGE_DESTINATION_NAMED=$CI_REGISTRY/adaptyst/adaptyst:branch-$CI_COMMIT_BRANCH
      fi
      export IMAGE_DESTINATION=$CI_REGISTRY/adaptyst/adaptyst:commit-$CI_COMMIT_SHORT_SHA
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_DEPLOY_USER\",\"password\":\"$CI_DEPLOY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION --destination $IMAGE_DESTINATION_NAMED --build-arg "JOBS=12"
    # Print the full registry path of the pushed image
    - echo "Image pushed successfully to ${IMAGE_DESTINATION} and ${IMAGE_DESTINATION_NAMED}"

# Based on https://gitlab.cern.ch/gitlabci-examples/build_docker_image/-/blob/master/.gitlab-ci.yml
make-alma9-docker-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: deploy
  dependencies: []
  script:
    - |
      if [[ $CI_COMMIT_BRANCH == "main" ]]; then
        export IMAGE_DESTINATION_NAMED=$CI_REGISTRY/adaptyst/adaptyst:alma9-latest
      else
        export IMAGE_DESTINATION_NAMED=$CI_REGISTRY/adaptyst/adaptyst:alma9-branch-$CI_COMMIT_BRANCH
      fi
      export IMAGE_DESTINATION=$CI_REGISTRY/adaptyst/adaptyst:alma9-commit-$CI_COMMIT_SHORT_SHA
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_DEPLOY_USER\",\"password\":\"$CI_DEPLOY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile-alma9 --destination $IMAGE_DESTINATION --destination $IMAGE_DESTINATION_NAMED
    # Print the full registry path of the pushed image
    - echo "Image pushed successfully to ${IMAGE_DESTINATION} and ${IMAGE_DESTINATION_NAMED}"

make-apptainer-images:
  tags:
    - gentoo
  stage: deploy
  dependencies: []
  before_script:
    - echo $KERBEROS_PASSWORD | kinit ${KERBEROS_USER}@CERN.CH
    - echo $CI_DEPLOY_PASSWORD | sudo apptainer registry login --username $CI_DEPLOY_USER --password-stdin docker://$CI_REGISTRY
  script:
    - sudo apptainer build --build-arg project_dir="$CI_PROJECT_DIR" --build-arg registry="$CI_REGISTRY" adaptyst.sif $CI_PROJECT_DIR/apptainer.def
    - sudo apptainer build --build-arg project_dir="$CI_PROJECT_DIR" --build-arg registry="$CI_REGISTRY" adaptyst-alma9.sif $CI_PROJECT_DIR/apptainer-alma9.def
    - |
      if [[ $CI_COMMIT_BRANCH == "main" ]]; then
        xrdfs root://eosuser.cern.ch mv $WEB_STORAGE/apptainer/adaptyst-latest.sif $WEB_STORAGE/apptainer/backup-adaptyst-latest.sif || true
        xrdfs root://eosuser.cern.ch mv $WEB_STORAGE/apptainer/adaptyst-alma9-latest.sif $WEB_STORAGE/apptainer/backup-adaptyst-alma9-latest.sif || true
        xrdcp -C auto --rm-bad-cksum -t 5 adaptyst.sif root://eosuser.cern.ch/$WEB_STORAGE/apptainer/adaptyst-latest.sif
        xrdcp -C auto --rm-bad-cksum -t 5 adaptyst-alma9.sif root://eosuser.cern.ch/$WEB_STORAGE/apptainer/adaptyst-alma9-latest.sif
      else
        xrdfs root://eosuser.cern.ch mv $WEB_STORAGE/apptainer/adaptyst-$CI_COMMIT_BRANCH.sif $WEB_STORAGE/apptainer/backup-adaptyst-$CI_COMMIT_BRANCH.sif || true
        xrdfs root://eosuser.cern.ch mv $WEB_STORAGE/apptainer/adaptyst-alma9-$CI_COMMIT_BRANCH.sif $WEB_STORAGE/apptainer/backup-adaptyst-alma9-$CI_COMMIT_BRANCH.sif || true
        xrdcp -C auto --rm-bad-cksum -t 5 adaptyst.sif root://eosuser.cern.ch/$WEB_STORAGE/apptainer/adaptyst-$CI_COMMIT_BRANCH.sif
        xrdcp -C auto --rm-bad-cksum -t 5 adaptyst-alma9.sif root://eosuser.cern.ch/$WEB_STORAGE/apptainer/adaptyst-alma9-$CI_COMMIT_BRANCH.sif
      fi
  after_script:
    - rm -f adaptyst.sif adaptyst-alma9.sif
    - kdestroy -A
    - sudo apptainer registry logout docker://$CI_REGISTRY

deploy-to-syclops-gentoo-profiling:
  tags:
    - gentoo-profiling
  stage: deploy
  dependencies: []
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - ./build.sh -G Ninja
    - echo | sudo ./install.sh
    - sudo setcap cap_perfmon,cap_bpf,cap_ipc_lock,cap_syslog+ep /opt/adaptyst/perf/bin/perf
  after_script:
    - sudo rm -rf $CI_PROJECT_DIR/linux
